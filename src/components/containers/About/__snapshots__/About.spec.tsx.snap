// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders About correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "#ccc",
        "flex": 1,
        "justifyContent": "center",
        "opacity": 0.4,
        "position": "absolute",
      }
    }
  >
    <Image
      source={1}
    />
  </View>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Object {
        "alignItems": "center",
        "color": "black",
        "fontSize": 25,
        "justifyContent": "center",
        "padding": 12,
      }
    }
  >
    Currency Converter
  </Text>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "alignItems": "center",
          "color": "black",
          "fontSize": 25,
          "justifyContent": "center",
          "padding": 12,
        },
        Object {
          "fontSize": 15,
        },
      ]
    }
  >
    1. App requests for data from Fixer API every 30 seconds, users can manually refresh too.

  2. Once data is fetched, amounts can be entered on either side for conversion.

  3. Changing Source currency is a premium feature of Fixer API.

  4. Destination currency can be changed to any of the available items in the list.

  </Text>
  <View
    accessibilityComponentType="button"
    accessibilityTraits={
      Array [
        "button",
      ]
    }
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#007AFF",
              "fontSize": 18,
              "padding": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Back
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders correctly when there are no items 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "#ccc",
        "flex": 1,
        "justifyContent": "center",
        "opacity": 0.4,
        "position": "absolute",
      }
    }
  >
    <Image
      source={1}
    />
  </View>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Object {
        "alignItems": "center",
        "color": "black",
        "fontSize": 25,
        "justifyContent": "center",
        "padding": 12,
      }
    }
  >
    Currency Converter
  </Text>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "alignItems": "center",
          "color": "black",
          "fontSize": 25,
          "justifyContent": "center",
          "padding": 12,
        },
        Object {
          "fontSize": 15,
        },
      ]
    }
  >
    1. App requests for data from Fixer API every 30 seconds, users can manually refresh too.

  2. Once data is fetched, amounts can be entered on either side for conversion.

  3. Changing Source currency is a premium feature of Fixer API.

  4. Destination currency can be changed to any of the available items in the list.

  </Text>
  <View
    accessibilityComponentType="button"
    accessibilityTraits={
      Array [
        "button",
      ]
    }
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#007AFF",
              "fontSize": 18,
              "padding": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Back
      </Text>
    </View>
  </View>
</View>
`;
